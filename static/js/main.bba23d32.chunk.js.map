{"version":3,"sources":["Videos.js","App.js","serviceWorker.js","index.js"],"names":["Videos","Card","className","CardContent","style","height","Typography","color","gutterBottom","href","this","props","source","target","dict","src","url","frameBorder","allow","allowFullScreen","Component","_","require","getSuggestionValue","suggestion","word","renderSuggestion","getSectionSuggestions","section","words","App","state","suggestions","videos","value","dicts","groupedWords","selected","getSuggestions","escapedValue","trim","replace","regex","RegExp","length","groupBy","car","setState","filtered","Object","keys","filter","key","test","reduce","obj","sort","map","onChange","event","newValue","method","onSuggestionsFetchRequested","onSuggestionsClearRequested","onSuggestionSelected","axios","get","then","response","data","dictionaries","forEach","file","resp","push","title","split","wordInfo","variants","inputProps","placeholder","autoFocus","renderVideos","width","margin","v","variant","start","video","Math","floor","ceil","end","endsWith","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bba23d32.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Card from \"@material-ui/core/Card\";\n\nclass Videos extends Component {\n    render() {\n\n        return (\n            <Card className={\"video-card\"}>\n                <CardContent style={{height: \"90%\"}}>\n                    <Typography color=\"textSecondary\" gutterBottom>\n                        Источник видео: <a href={this.props.source} target=\"_blank\">{this.props.dict}</a>\n                    </Typography>\n                    <iframe className=\"video\"\n                            src={this.props.url}\n                            frameBorder=\"0\"\n                            allow=\"accelerometer; encrypted-media; gyroscope; picture-in-picture\"\n                            allowFullScreen>\n                    </iframe>\n                </CardContent>\n\n\n            </Card>\n\n        );\n    }\n}\n\nexport default Videos;","import React, { Component } from \"react\";\nimport Videos from \"./Videos\";\nimport axios from \"axios\";\n\nimport Autosuggest from \"react-autosuggest\";\n\nlet _ = require(\"lodash\");\n\nfunction escapeRegexCharacters(str) {\n  return str.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n}\n\nfunction getSuggestionValue(suggestion) {\n  return suggestion.word;\n}\n\nfunction renderSuggestion(suggestion) {\n  return <span>{suggestion.word}</span>;\n}\n\nfunction getSectionSuggestions(section) {\n  return section.words;\n}\n\nclass App extends Component {\n  state = {\n    suggestions: [],\n    videos: null,\n    value: \"\",\n    dicts: [],\n    words: [],\n    groupedWords: [],\n    selected: false,\n  };\n\n  componentDidMount() {\n    var dicts = [];\n    var words = [];\n\n    axios.get(\"manifest.json\").then((response) => {\n      const dict_names = response.data.dictionaries;\n      dict_names.forEach((file) => {\n        axios.get(`dictionaries/${file}`).then((resp) => {\n          dicts.push({ title: `${file}`.split(\".json\")[0], words: resp.data });\n          resp.data.forEach((wordInfo) => {\n            words.push({\n              title: `${file}`.split(\".json\")[0],\n              word: wordInfo.word,\n              variants: wordInfo.variants,\n            });\n          });\n        });\n      });\n    });\n\n    this.setState({\n      dicts: dicts,\n      words: words,\n    });\n  }\n\n  getSuggestions = (value) => {\n    const escapedValue = escapeRegexCharacters(value.trim());\n\n    if (escapedValue === \"\") {\n      return [];\n    }\n\n    const regex = new RegExp(\"^\" + escapedValue, \"i\");\n\n    let groupedWords;\n    if (!this.state.groupedWords.length) {\n      groupedWords = _.groupBy(this.state.words, (car) => car.word);\n      this.setState({ groupedWords: groupedWords });\n    } else groupedWords = this.state.groupedWords;\n\n    const filtered = Object.keys(groupedWords)\n      .filter((key) => regex.test(key))\n      .reduce((obj, key) => {\n        obj[key] = groupedWords[key];\n        return obj;\n      }, {});\n\n    return Object.keys(filtered)\n      .sort()\n      .map((key) => {\n        return { word: key };\n      });\n  };\n\n  onChange = (event, { newValue, method }) => {\n    this.setState({\n      value: newValue,\n    });\n  };\n\n  onSuggestionsFetchRequested = ({ value }) => {\n    this.setState({\n      suggestions: this.getSuggestions(value),\n      selected: false,\n    });\n  };\n\n  onSuggestionsClearRequested = () => {\n    this.setState({\n      suggestions: [],\n    });\n  };\n\n  onSuggestionSelected = (event, { suggestion }) => {\n    this.setState({\n      selected: true,\n    });\n  };\n\n  get renderVideos() {\n    let wordInfo = [];\n    let videos = [];\n\n    if (this.state.selected && this.state.value.length > 0) {\n      this.state.groupedWords[this.state.value].forEach((dict) => {\n        wordInfo.push({ variants: dict.variants, dict: dict.title });\n      });\n\n      if (wordInfo) {\n        for (let v of wordInfo) {\n          for (let variant of v.variants) {\n            let url;\n            if (variant.start)\n              url = `https://www.youtube.com/embed/${\n                variant.video.split(\"v=\")[1]\n              }?start=${Math.floor(variant.start)}&end=${Math.ceil(\n                variant.end\n              )}&rel=0&loop=1&controls=0&showinfo=0`;\n            else if (\n              !variant.video.endsWith(\".mp4\") &&\n              !variant.video.endsWith(\".webm\")\n            )\n              url = `https://www.youtube.com/embed/${\n                variant.video.split(\"v=\")[1]\n              }`;\n            else url = variant.video;\n\n            videos.push(\n              <Videos url={url} dict={v.dict} source={variant.source} />\n            );\n          }\n        }\n      }\n    }\n\n    return videos;\n  }\n\n  render() {\n    const inputProps = {\n      placeholder: \"Введите слово\",\n      value: this.state.value,\n      onChange: this.onChange,\n      autoFocus: true,\n    };\n\n    return (\n      <div>\n        <div>\n          <h1>Поиск по словарям РЖЯ</h1>\n          <a href=\"https://vk.com/public189313853\">Группа в ВК</a>\n        </div>\n        <div className={\"search-field\"}>\n          <Autosuggest\n            suggestions={this.state.suggestions}\n            onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n            onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n            getSuggestionValue={getSuggestionValue}\n            renderSuggestion={renderSuggestion}\n            onSuggestionSelected={this.onSuggestionSelected}\n            getSectionSuggestions={getSectionSuggestions}\n            inputProps={inputProps}\n          />\n        </div>\n        <div className=\"videos-grid\">{this.renderVideos}</div>\n        <div style={{ width: \"40em\", margin: \"1em\" }}>\n          Агрегатор словарей русского жестового языка сделан в ноябре 2019 и с\n          тех пор не обновлялся. Разработчики:{\" \"}\n          <a href=\"https://t.me/vitalypavlenko\">Виталий Павленко</a>, Лиза\n          Свитанко, Даниил Охлопков.\n          <p>\n            Агрегатор словарей даёт возможность одновременно искать по многим\n            доступным в интернете общим словарям, таким как:\n            <ul>\n              <li>\n                <a target=\"_blank\" href=\"https://www.spreadthesign.com/\">\n                  Spread The Sign\n                </a>{\" \"}\n                (27023 слова)\n              </li>\n              <li>\n                <a\n                  target=\"_blank\"\n                  href=\"https://surdocentr.ru/publikatsii/obzory-slovarej-zhestovykh-yazykov/197-on-line-slovar-digitgestus-russkij-zhestovyj-yazyk\"\n                >\n                  DigitGestus\n                </a>{\" \"}\n                (3384 слова)\n              </li>\n              <li>\n                <a target=\"_blank\" href=\"https://vk.com/jestovnet\">\n                  Город жестов\n                </a>{\" \"}\n                (2789 слов)\n              </li>\n              <li>\n                <a\n                  target=\"_blank\"\n                  href=\"https://www.youtube.com/playlist?list=PLnzoJGrIUn81yN6rVjajY_hdW4Prw_0-J\"\n                >\n                  словарь с синими шторами\n                </a>{\" \"}\n                (3157 слов)\n              </li>\n\n              <li>\n                <a target=\"_blank\" href=\"http://surdoserver.ru/\">\n                  Сурдосервер\n                </a>{\" \"}\n                (2701 слов)\n              </li>\n              <li>\n                <a target=\"_blank\" href=\"https://slovar.surdocentr.ru/\">\n                  ЦНИИ русского жестового языка\n                </a>{\" \"}\n                (1586 слов)\n              </li>\n              <li>\n                <a target=\"_blank\" href=\"https://signlang.ru/studyrsl/topics/\">\n                  Лаборатория лингвистики жестового языка\n                </a>{\" \"}\n                (1088 слов)\n              </li>\n              <li>\n                <a\n                  target=\"_blank\"\n                  href=\"https://web.archive.org/web/20190717064525/http://www.nisor.ru/snews/oa-/iooa-uoo-ooo-a\"\n                >\n                  институт социальной ребилитации НГТУ\n                </a>{\" \"}\n                (1156 слов)\n              </li>\n              <li>\n                <a\n                  target=\"_blank\"\n                  href=\"https://www.youtube.com/playlist?list=PL_VzOPUOoGKQQ7hyco7uz5apagoF99raf\"\n                >\n                  Енох Иаредович\n                </a>{\" \"}\n                (1230 слов)\n              </li>\n              <li>\n                <a\n                  target=\"_blank\"\n                  href=\"https://www.youtube.com/playlist?list=PLzQrZe3EemP7-hrTR9OEtFWOMkz9HTGoR\"\n                >\n                  Церковь глухих в интернете\n                </a>{\" \"}\n                (1047 слов)\n              </li>\n              <li>\n                <a\n                  target=\"_blank\"\n                  href=\"https://www.youtube.com/watch?v=ZTT0UWIE65U&list=PL_x7BZC9wDdvtlajPS2xnv54ZJ90_K6ef\"\n                >\n                  Школа жестового языка \"Образ\"\n                </a>{\" \"}\n                (244 слов)\n              </li>\n              <li>\n                <a\n                  target=\"_blank\"\n                  href=\"https://www.youtube.com/playlist?list=PLbnWmVvet_0xylwaOtIHIvUfUDT_09iWh\"\n                >\n                  Безэквивалентная лексика\n                </a>{\" \"}\n                (107 слов)\n              </li>\n            </ul>\n          </p>\n          <p>\n            Также в агрегаторе есть религиозные словари:\n            <ul>\n              <li>\n                <a\n                  target=\"_blank\"\n                  href=\"https://www.youtube.com/watch?v=ipTfYTo-_ZI\"\n                >\n                  Телекомпания \"Глас\", Киев, 2006 год\n                </a>{\" \"}\n                (460 слов)\n              </li>\n              <li>\n                <a\n                  target=\"_blank\"\n                  href=\"https://www.youtube.com/watch?v=QeLTJWWXSy8\"\n                >\n                  Кинокомпания \"Ковчег\"\n                </a>{\" \"}\n                (708 слов)\n              </li>\n              <li>\n                <a\n                  target=\"_blank\"\n                  href=\"http://surdonika.ru/metodics/editions/slovar-religioznykh-zhestov.php\"\n                >\n                  Координационный центр по работе с глухими, слепоглухими и\n                  слабослышащими РПЦ\n                </a>{\" \"}\n                (225 слов)\n              </li>\n              <li>\n                <a target=\"_blank\" href=\"https://voginfo.ru/lexicon/\">\n                  ВОГ и РПЦ\n                </a>{\" \"}\n                (217 слов)\n              </li>\n            </ul>\n          </p>\n          <p>\n            Мы надеемся, что проект будет полезен всем, кто изучает жестовый\n            язык, а также, быть может, лингвистам, изучающим диалектные\n            различия. (Если вы такой лингвист и будете делать публикацию,{\" \"}\n            <a href=\"mailto:cxielamiko@gmail.com\">скажите нам заранее</a>, мы\n            придумаем, как вы нас сможете процитировать.)\n          </p>\n          <p>\n            Жестовые языки сильно более вариативны по сравнению со звучащими.\n            Жесты сильно различаются по городам и между поколениями. Агрегатор\n            показывает это разнообразие. Было бы круто снабдить выдачу\n            информацией о городах и поколениях, помогите нам.\n          </p>\n          <p>\n            <a href=\"https://github.com/vpavlenko/rsl\">Исходный код</a>\n          </p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}